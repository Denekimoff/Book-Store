{"version":3,"file":"static/js/556.0af61908.chunk.js","mappings":"mKAUaA,EAAS,SAAH,GAAkG,IAAD,IAA3FC,KAAAA,OAAI,MAAG,SAAQ,MAAEC,UAAAA,OAAS,MAAG,SAAQ,EAAEC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAChF,OACI,mBAAQJ,KAAMA,EAAMC,UAAWA,EAAWC,SAAUA,EAAUE,QAASA,EAAQ,SAAED,GAEzF,C,0HCTe,SAASE,IACpB,IAAQC,EAAUC,EAAAA,WAAiBC,EAAAA,GAA3BF,MACR,EAA4BC,EAAAA,SAAe,IAAG,eAAtCE,EAAK,KAAEC,EAAQ,KAUvB,OACI,oBAAST,UAAS,+BAA0BK,GAAQ,UAChD,iBAAKL,UAAU,kBAAiB,WAC5B,eAAIA,UAAU,mBAAkB,SAAC,6BACjC,cAAGA,UAAU,yBAAwB,SAAC,4FACtC,kBAAMU,KAAK,WAAWV,UAAU,kBAAkBW,OAAO,OAAOC,SAXpD,SAACC,GACrBA,EAAMC,iBACNC,MAAM,SAAD,OAAUP,EAAK,oBAEpBK,EAAMG,OAAOC,OACjB,EAMsG,WACtF,kBAAOlB,KAAK,QAAQmB,YAAY,cAAcC,UAAQ,EAACC,SAf1C,SAACP,GAC1BJ,GAAS,SAAAY,GAAI,OAAIR,EAAMG,OAAOM,KAAK,GACvC,KAcgB,SAACxB,EAAA,EAAM,CAACE,UAAS,yBAAoBK,GAASN,KAAK,SAAQ,SAAC,qBAKhF,C","sources":["components/Button/index.tsx","components/SubscribeMail/index.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport interface IButton {\r\n  type: 'button' | 'submit' | 'reset',\r\n  className: string,\r\n  disabled: boolean,\r\n  children: any,\r\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void,\r\n}\r\n\r\nexport const Button = ({ type = 'button', className = 'button', disabled, children, onClick }: Partial<IButton>) => {\r\n    return (\r\n        <button type={type} className={className} disabled={disabled} onClick={onClick}>{children}</button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ThemeContext } from '../../context'\r\nimport { Button } from '../Button'\r\nimport './SubscribeMail.scss'\r\n\r\nexport default function SubscribeMail () {\r\n    const { theme } = React.useContext(ThemeContext)\r\n    const [ email, setEmail ] = React.useState('')\r\n    const handlerOnChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(prev => event.target.value)\r\n    }\r\n    const handlerOnSubmit = (event: React.FormEvent) => {\r\n        event.preventDefault()\r\n        alert(`Email ${email} post on server`)\r\n        //@ts-ignore\r\n        event.target.reset()\r\n    }\r\n    return (\r\n        <section className={`subscribe subscribe--${theme}`}>\r\n            <div className='subscribe__body'>\r\n                <h3 className='subscribe__title'>Subscribe to newsletter</h3>\r\n                <p className='subscribe__description'>Be the firth to know about new IT books, upcoming releases, exclusive offers and more.</p>\r\n                <form name='formmail' className='subscribe__form' method='post' onSubmit={handlerOnSubmit}>\r\n                    <input type='email' placeholder='Your e-mail' required onChange={handlerOnChangeEmail}/>\r\n                    <Button className={`button button--${theme}`} type='submit'>Subscribe</Button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n"],"names":["Button","type","className","disabled","children","onClick","SubscribeMail","theme","React","ThemeContext","email","setEmail","name","method","onSubmit","event","preventDefault","alert","target","reset","placeholder","required","onChange","prev","value"],"sourceRoot":""}